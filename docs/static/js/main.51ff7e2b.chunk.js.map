{"version":3,"sources":["firebase/firebase-config.js","components/journal/NothingSelected.js","helpers/alertaConfiguracion.js","helpers/fileUpload.js","helpers/loadNotes.js","types/types.js","actions/notes.js","hooks/useForm.js","helpers/capitalizar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/loading/Loading.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","NothingSelected","className","Toast","Swal","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","activeNote","note","type","payload","addNewNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","fire","icon","title","deleteNote","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","capitalizar","palabra","toUpperCase","slice","NotesAppBar","useDispatch","active","useSelector","state","noteDate","moment","date","format","style","display","onChange","e","files","text","allowOutsideClick","willOpen","showLoading","fileUrl","close","startUploading","onClick","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","delete","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","setError","err","RemoveError","finishLoading","starLoginEmailPassword","email","password","signInWithEmailAndPassword","user","login","displayName","catch","code","logout","JournalEntry","backgroundSize","backgroundImage","backgroundPosition","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","console","log","JournalScreen","LoginScreen","ui","loading","msgError","isFormValid","validator","isEmail","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","trim","length","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","Loading","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","basename","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.51ff7e2b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_APIKEY,\r\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n  appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}\r\n","export const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>Selecciona algo <br/> o ¡Crea una nueva entrada!</p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import Swal from 'sweetalert2';\r\n\r\nexport const Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: true,\r\n    didOpen: (toast) => {\r\n        toast.addEventListener('mouseenter', Swal.stopTimer)\r\n        toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});","export const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = \"https://api.cloudinary.com/v1_1/dfwigtkfn/upload\";\r\n    const formData = new FormData();\r\n    formData.append( \"upload_preset\", \"react-journal\" );\r\n    formData.append( \"file\", file );\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: \"POST\",\r\n            body: formData\r\n        });\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import { db } from \"../firebase/firebase-config\";\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n} ","export const types = {\r\n    login: \"[Auth] Login\",\r\n    logout: \"[Auth] Logout\",\r\n\r\n    uiSetError: \"[UI] Set Error\",\r\n    uiRemoveError: \"[UI] Remove Error\",\r\n\r\n    uiStarLoading: \"[UI] Start loading\",\r\n    uiFinishLoading: \"[UI] Finish loading\",\r\n\r\n    notesAddNew: \"[Notes] New note\",\r\n    notesActive: \"[Notes] Set active note\",\r\n    notesLoad: \"[Notes] Load notes\",\r\n    notesUpdated: \"[Notes] Update note saved\",\r\n    notesFileUrl: \"[Notes] Update image url\",\r\n    notesDelete: \"[Notes] Delete note\",\r\n    notesLogoutCleaning: \"[Notes] Logout Cleaning\"\r\n}","import Swal from 'sweetalert2';\r\nimport { Toast } from '../helpers/alertaConfiguracion';\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from '../helpers/fileUpload';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: \"\",\r\n            body: \"\",\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        try {\r\n            const doc = await db.collection(`${uid}/journal/notes`).add( newNote );\r\n    \r\n            dispatch( activeNote( doc.id, newNote ) );\r\n            dispatch( addNewNote( doc.id, newNote ));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n});\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async ( dispatch ) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) );\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n\r\n    return async ( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url ) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, noteToFirestore ));\r\n\r\n        Toast.fire({\r\n            icon: 'success',\r\n            title: `¡Nota Guardada Correctamente!`\r\n        });\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: \"Subiendo Imagen...\",\r\n            text: \"Por favor espere\",\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n        \r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) );\r\n\r\n        Swal.close();\r\n        Toast.fire({\r\n            icon: 'success',\r\n            title: `Imagen Subida Correctamente`\r\n        });\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const uid = getState().auth.uid;\r\n\r\n        Swal.fire({\r\n            title: '¿Seguro que quires eliminar la Nota?',\r\n            text: \"¡Esta acción no se puede revertir!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, ¡Borrar!',\r\n            cancelButtonText: 'Cancelar'\r\n          }).then(( result ) => {\r\n            if (result.isConfirmed) {\r\n        \r\n                db.doc(`${ uid }/journal/notes/${ id }`).delete();\r\n                dispatch( deleteNote( id ) );\r\n\r\n                Swal.fire(\r\n                    '¡Eliminada!',\r\n                    'La nota ha sido borrada.',\r\n                    'success'\r\n                );\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n});","import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value //Aquí computamos, asignamos el valor al name\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n}","export const capitalizar = ( palabra ) => {\r\n    return palabra[0].toUpperCase() + palabra.slice(1);\r\n}","import moment from 'moment';\r\nimport \"moment/locale/es\";\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { startDeleting, startSaveNote, startUploading } from \"../../actions/notes\";\r\nimport { capitalizar } from '../../helpers/capitalizar';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector( state => state.notes );\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) );\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector(\"#fileSelector\").click();\r\n    }\r\n\r\n    const handleFileChange = ( e ) => {\r\n        const file = e.target.files[0];\r\n\r\n        if ( file ) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( active.id ) );\r\n    }\r\n\r\n    const noteDate = moment( active.date );\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{ noteDate.format(\"DD\") + \" de \" + capitalizar( noteDate.format(\"MMMM YYYY\") ) }</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display: \"none\" }}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button className=\"btn btn-danger btn-custom\" onClick={ handleDelete }>Borrar</button>\r\n                <button className=\"btn\" onClick={ handlePictureClick }>Imagen</button>\r\n                <button className=\"btn\" onClick={ handleSave }>Guardar</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { activeNote } from \"../../actions/notes\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { NotesAppBar } from \"./NotesAppBar\";\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active:note } = useSelector( state => state.notes );\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    const { body, title } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n\r\n        if( note.id !== activeId.current ){\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n\r\n    }, [ note, reset ]);\r\n\r\n    useEffect(() => {\r\n        dispatch( activeNote( formValues.id, {...formValues } ));\r\n    }, [ formValues, dispatch ]);\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Un increíble título\" \r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                    name=\"title\"\r\n                />\r\n\r\n                <textarea \r\n                    placeholder=\"¿Qué pasó hoy?\" \r\n                    className=\"notes__textarea\" \r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                    name=\"body\"\r\n                ></textarea>\r\n\r\n                {\r\n                    note.url &&\r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            src={ note.url }\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div> \r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( err ) => {\r\n    return {\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const RemoveError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStarLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from \"../types/types\";\r\nimport { finishLoading, startLoading } from './ui';\r\nimport Swal from 'sweetalert2';\r\nimport { Toast } from '../helpers/alertaConfiguracion';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const starLoginEmailPassword = ( email, password ) => {\r\n    return ( dispatch ) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        return firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({user}) => {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n\r\n                Toast.fire({\r\n                    icon: 'success',\r\n                    title: `¡Bienvenido ${user.displayName}!`\r\n                });\r\n\r\n                dispatch( finishLoading() );\r\n            }).catch( e => {\r\n\r\n                dispatch( finishLoading() );\r\n\r\n                if ( e.code === \"auth/user-not-found\" ) {\r\n                    Swal.fire(\"¡Error!\", \"El usuario no existe o fue eliminado\", \"error\");\r\n                } else if ( e.code === \"auth/wrong-password\" ) {\r\n                    Swal.fire(\"¡Error!\", \"Contraseña Incorrecta\", \"error\");\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\r\n    return dispatch => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async ({ user }) => {\r\n                await user.updateProfile({ displayName: name });\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                );\r\n            }).catch( e => {\r\n                Swal.fire(\"Error\", \"Ya existe un usuario registrado con ese Correo\", \"warning\");\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = ( uid, displayName ) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import moment from 'moment';\r\nimport \"moment/locale/es\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\nimport { capitalizar } from '../../helpers/capitalizar';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const noteDate = moment(date);\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch( activeNote( id, {\r\n                date, title, body, url\r\n            }) \r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn\" onClick={ handleEntryClick }>\r\n\r\n            {\r\n                url &&\r\n                <div className=\"journal__entry-picture\" style={{\r\n                    backgroundSize: \"cover\",\r\n                    backgroundImage: `url(${ url })`,\r\n                    backgroundPosition: \"center\"\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">{ title }</p>\r\n                <p className=\"journal__entry-content\">{ body }</p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{ capitalizar( noteDate.format(\"dddd\") ) }</span>\r\n                <h4>{ noteDate.format(\"DD\") }</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { JournalEntry } from \"./JournalEntry\";\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map( note => <JournalEntry key={ note.id } { ...note } /> )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { startNewNote } from \"../../actions/notes\";\r\nimport { JournalEntries } from \"./JournalEntries\";\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>{ name }</span>\r\n                </h3>\r\n\r\n                <button className=\"btn\" onClick={ handleLogout }>Salir</button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\" onClick={ handleAddNew }>\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">Nueva entrada</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import { NothingSelected } from \"./NothingSelected\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NoteScreen } from \"../notes/NoteScreen\";\r\nimport { Sidebar } from \"./Sidebar\";\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector( state => state.notes ); //Extraemos del Store\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n                { active ? <NoteScreen /> : <NothingSelected /> }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { starLoginEmailPassword, startGoogleLogin } from \"../../actions/auth\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport validator from 'validator';\r\nimport { RemoveError, setError } from \"../../actions/ui\";\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading, msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange] = useForm({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n    // {\r\n    // email: \"nando@gmail.com\",\r\n    // password: \"123456\"\r\n    // }\r\n        \r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid() ) {\r\n            dispatch( starLoginEmailPassword( email, password ) );\r\n        }\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( !validator.isEmail( email ) ){\r\n            dispatch( setError(\"Correo no Válido\") );\r\n            return false;\r\n        } else if( password < 3 ){\r\n            dispatch( setError(\"La Contraseña deben tener al menos 4 caracteres\") );\r\n            return false;\r\n        }\r\n            \r\n        dispatch( RemoveError() );\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"auth__title\">Iniciar Sesión</h2>\r\n\r\n            {\r\n                msgError && \r\n                <div className=\"auth__alert-error\"><center>{ msgError }</center></div>\r\n            }\r\n\r\n            <form className=\"animate__animated animate__fadeIn animate__faster\" onSubmit={ handleLogin }>\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Correo\" \r\n                    name=\"email\" \r\n                    className=\"auth__input\" \r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Contraseña\" \r\n                    name=\"password\" \r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={ loading }>Ingresar</button>\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Ingresa con Redes Sociales</p>\r\n\r\n                    <div className=\"google-btn\" onClick={ handleGoogleLogin }>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\"><b>Inicia Sesión con Google</b></p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"text-center\">\r\n                    <Link to=\"/auth/register\" className=\"link\">Crear Nueva Cuenta</Link>\r\n                </div> \r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { Link } from \"react-router-dom\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RemoveError, setError } from \"../../actions/ui\";\r\nimport { startRegisterWithEmailPasswordName } from \"../../actions/auth\";\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    });\r\n        // {\r\n        // name: \"Hernando\",\r\n        // email: \"nando@gmail.com\",\r\n        // password: \"123456\",\r\n        // password2: \"123456\"\r\n        // }\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ){\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ) );\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length === 0){\r\n            dispatch( setError(\"El Nombre es Obligatorio\") );\r\n            return false;\r\n        } else if ( !validator.isEmail( email ) ){\r\n            dispatch( setError(\"Correo no Válido\") );\r\n            return false;\r\n        } else if( password !== password2 || password.length < 3 ){\r\n            dispatch( setError(\"Las Contraseñas deben coincidir y tener al menos 4 caracteres\") );\r\n            return false;\r\n        }\r\n            \r\n        dispatch( RemoveError() );\r\n\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"auth__title\">Registro</h2>\r\n\r\n            <form className=\"animate__animated animate__fadeIn animate__faster\" onSubmit={ handleRegister }>\r\n\r\n                {\r\n                    msgError && \r\n                    <div className=\"auth__alert-error\"><center>{ msgError }</center></div>\r\n                }\r\n\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Nombre\" \r\n                    name=\"name\" \r\n                    className=\"auth__input\" \r\n                    autoComplete=\"off\" \r\n                    onChange={ handleInputChange } \r\n                    value={ name }\r\n                />\r\n                <input \r\n                    type=\"text\" \r\n                    placeholder=\"Correo\" \r\n                    name=\"email\" \r\n                    className=\"auth__input\" \r\n                    autoComplete=\"off\" \r\n                    onChange={ handleInputChange } \r\n                    value={ email }\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Contraseña\" \r\n                    name=\"password\" \r\n                    className=\"auth__input\" \r\n                    onChange={ handleInputChange} \r\n                    value={ password }\r\n                />\r\n                <input \r\n                    type=\"password\" \r\n                    placeholder=\"Confirmar Contraseña\"\r\n                    name=\"password2\" \r\n                    className=\"auth__input\" \r\n                    onChange={ handleInputChange} \r\n                    value={ password2 }\r\n                />\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">Registrar</button>\r\n\r\n                <div className=\"text-center\">\r\n                    <Link to=\"/auth/login\" className=\"link\">¿Ya tienes una cuenta?</Link>\r\n                </div> \r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route exact path=\"/auth/login\" component={ LoginScreen } />\r\n                    <Route exact path=\"/auth/register\" component={ RegisterScreen } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n        <Route { ...rest } component={ (props) => ( ( isAuthenticated ) \r\n            ? ( <Component {...props} /> ) \r\n            : ( <Redirect to=\"/auth/login\" /> ) )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n} ","import { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({ isAuthenticated, component: Component, ...rest }) => {\r\n\r\n    return (\r\n        <Route { ...rest } component={ (props) => ( ( isAuthenticated ) \r\n            ? ( <Redirect to=\"/\" /> )\r\n            : ( <Component {...props} /> ) )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n} ","export const Loading = () => {\r\n    return (\r\n        <div className=\"loading__screen\">\r\n            <div className=\"spinner\"></div>\r\n            <p>Cargando...</p>\r\n        </div>\r\n    )\r\n}\r\n","import { firebase } from \"../firebase/firebase-config\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { startLoadingNotes } from \"../actions/notes\";\r\nimport { Loading } from \"../components/loading/Loading\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState( true );\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState( false );\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( (user) => {\r\n            if ( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn( true );\r\n\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n\r\n            } else {\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            setChecking( false );\r\n        });\r\n\r\n    }, [ dispatch, setChecking, setIsLoggedIn ]);\r\n\r\n    if ( checking ) {\r\n        return ( <Loading /> )\r\n    }\r\n\r\n    return (\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute isAuthenticated={ isLoggedIn } path=\"/auth\" component={ AuthRouter } />\r\n                    <PrivateRoute isAuthenticated={ isLoggedIn } exact path=\"/\" component={ JournalScreen } />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.notesUpdated:\r\n            return{\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                notes: [],\r\n                active: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n\r\n        case types.uiStarLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers( applyMiddleware( thunk ) )\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action) => {\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return{\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n            return {}\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { AppRouter } from './routers/AppRouter';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport \"./styles/styles.scss\";\n\nReactDOM.render( <JournalApp />, document.getElementById('root') );\n"],"sourceRoot":""}